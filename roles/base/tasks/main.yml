- name: add other hosts 
  tags: etchostschange
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
    backup: true

- name: ensure old files are not installed
  tags: always
  apt:
    name:
      - curl
      - apt-transport-https
      - gnupg2
      - software-properties-common
      - ca-certificates
      - conatinerd.io
      - kubeadm
      - kubectl
      - kubelet
      - docker-ce
      - docker-ce-cli
      - docker-compose-plugin
    state: absent

- name: install required apps
  tags: always
  apt:
    name:
      - curl
      - apt-transport-https
      - gnupg2
      - software-properties-common
      - ca-certificates
    state: latest
    update_cache: true
  changed_when: false

- name: add docker gpg key
  tags: gpg
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    keyring: /etc/apt/keyrings/docker.gpg
    state: present

- name: add docker repo
  tags: repo
  apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    filename: /etc/apt/sources.list.d/docker.list
    state: present

- name: install containerd
  tags: containerd
  apt:
    name: containerd.io
    update_cache: true

- name: create /etc/containerd directory
  tags: containerd
  file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: 0755

- name: set up containerd config file from template
  tags: containerd
  template:
    src: containerd_config_ubuntu.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: 0644

- name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
  tags: swap
  shell: |
    swapoff -a

- name: Disable SWAP in fstab since kubernetes can't work with swap enabled (2/2)
  tags: swap
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: enable ip forwarding in sysctl.conf
  shell: |
    cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf > /dev/null
    net.bridge.bridge-nf-call-iptables  = 1
    net.bridge.bridge-nf-call-ip6tables = 1
    net.ipv4.ip_forward                 = 1
    EOF

- name: enable br_netfilter
  shell: echo 'overlay \nbr_netfilter' | sudo tee /etc/modules-load.d/k8s.conf > /dev/null

- name: reboot machine before installing k8s
  reboot:

- name: add k8s gpg key
  tags: gpg
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /etc/apt/keyrings/kubernetes-archive-keyring.gpg
    state: present

- name: add k8s repo
  tags: repo
  apt_repository:
    repo: deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
    filename: /etc/apt/sources.list.d/kubernetes
    state: present

- name: install k8s required packages
  apt:
    name:
      - kubeadm
      - kubectl
      - kubelet

- name: ensure that kubelet service is enabled
  tags: kubelet
  service:
    name: kubelet
    state: started
    enabled: true